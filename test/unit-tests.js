// Generated by CoffeeScript 1.7.1
(function() {
  var Resource, TestModel, TestSchema, mongoose;

  mongoose = require('mongoose');

  Resource = require('../lib');

  TestSchema = new mongoose.Schema({
    name: String
  });

  TestModel = mongoose.model('TestModel', TestSchema);

  describe('resource', function() {
    var resource;
    resource = {};
    before(function() {
      return resource = new Resource(TestModel, 'test-models');
    });
    it('has a many_path property', function(done) {
      resource.should.have.property('many_path');
      return done();
    });
    it('has a single_path property', function(done) {
      resource.should.have.property('single_path');
      return done();
    });
    it('has an options property', function(done) {
      resource.should.have.property('options');
      return done();
    });
    return describe('resource.options', function() {
      it('has a limit property', function(done) {
        resource.options.should.have.property('limit');
        return done();
      });
      return it('has a refs property', function(done) {
        resource.options.should.have.property('refs');
        return done();
      });
    });
  });

}).call(this);

//# sourceMappingURL=unit-tests.map
